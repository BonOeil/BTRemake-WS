services:

  # ========== ELK STACK ==========
 #  elasticsearch:
 #    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.2
 #  #    container_name: elasticsearch
 #    environment:
 #      - node.name=elasticsearch
 #      - cluster.name=es-docker-cluster
 #      - discovery.type=single-node
 #      - bootstrap.memory_lock=true
 #      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
 #      - xpack.security.enabled=false
 #      - xpack.security.enrollment.enabled=false
 #    ulimits:
 #      memlock:
 #        soft: -1
 #        hard: -1
 # #    volumes:
 #  #     - elasticsearch-data:/usr/share/elasticsearch/data
 #    ports:
 #      - "9200:9200"
 #    networks:
 #      - app-network
 #    healthcheck:
 #      test: ["CMD-SHELL", "curl -f http://elasticsearch:9200/_cluster/health || exit 1"]
 #      interval: 30s
 #      timeout: 10s
 #      retries: 5

 #  kibana:
 #    image: docker.elastic.co/kibana/kibana:9.0.2
 #    #docker.elastic.co/kibana/kibana:8.10.0
 #    #   container_name: kibana
 #    ports:
 #      - "5601:5601"
 #    environment:
 #      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
 #      - ELASTICSEARCH_USERNAME=kibana_system
 #      - ELASTICSEARCH_PASSWORD=kibana_system
 #    networks:
 #      - app-network
 #    depends_on:
 #      - elasticsearch
 #        # elasticsearch:
 #        #   condition: service_healthy
      
 # ========== CORE APP ==========

  gameserver:
    image: ${DOCKER_REGISTRY-}gameserver
    container_name: gameserver
    ports:
      - "8080:80"
      - "8081:443"
    build:
      context: ./GameServer
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    networks:
      - app-network
      
  gameclient:
    image: ${DOCKER_REGISTRY-}gameclient
    container_name: gameclient
    ports:
      - "8082:80"
      - "8083:443"
    build:
      context: ./BTRemakeWebApplication
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    #   - API_URL=http://gameserver:8080
    networks:
      - app-network
    depends_on:
      - gameserver
     
  gameclientangular:
    image: ${DOCKER_REGISTRY-}gameclientangular
    container_name: gameclientangular
    ports:
      - "9053:80"
    build:
      context: ./BTRemakeAngularProject
      dockerfile: Dockerfile
    #environment:
    #   - API_URL=http://gameserver:8080
    networks:
      - app-network
    depends_on:
      - gameserver

 # ========== TEST APP ==========
  # testConsole:
  #   image: ${DOCKER_REGISTRY-}testconsole
  #   build:
  #     context: .
  #     dockerfile: TestClient/Dockerfile
  #   environment:
  #     - API_URL=http://gameserver:8080
  #   networks:
  #     - app-network
  #   depends_on:
  #     - gameserver

 # ========== Networks ==========
networks:
  app-network:
    driver: bridge